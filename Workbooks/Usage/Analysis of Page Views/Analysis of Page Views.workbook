{
    "version": "Notebook/1.0",
    "items": [
        {
            "type": 1,
            "content": {
                "json": "# <a name=\"analysis-of-page-views\"></a>An√°lise de exibi√ß√µes de p√°gina\nExibi√ß√µes de p√°gina correspondem √† atividade do usu√°rio em seu aplicativo. Compreender como os usu√°rios interagem com suas p√°ginas lhe dar√° boas ideias sobre o que est√° funcionando em seu aplicativo e quais aspectos precisam de melhorias. \n\nEste relat√≥rio ajudar√° voc√™ a entender os comportamentos de exibi√ß√µes de p√°gina comuns, tais como:\n* Uso\n* Tempo gasto na p√°gina\n* Tempo para a primeira intera√ß√£o\n* Taxas de sa√≠da \n\nSe a telemetria n√£o incluir modos de exibi√ß√£o de p√°gina, siga estas [instru√ß√µes](https://docs.microsoft.com/en-us/azure/application-insights/app-insights-javascript) para come√ßar a coletar ‚Äì √© relativamente simples."
            },
            "name": "Description text"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                    {
                        "id": "2006c356-d32b-4f16-a22c-6a76d0e84288",
                        "version": "KqlParameterItem/1.0",
                        "name": "Pages",
                        "type": 2,
                        "description": null,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let mostUsedEvent = union pageViews\n| where timestamp >= ago(7d)\n| summarize Count = count() by name\n| top 3 by Count desc\n| summarize makelist(name);\nunion pageViews\n| where timestamp >= ago(7d)\n| summarize Count = count() by name\n| extend IsSelected = iff(name in (mostUsedEvent), true, false)\n| order by Count desc\n| project v = name, t = name, IsSelected\n| union (\ndatatable(v:string, t:string, IsSelected:boolean)[\n'*', 'All Page Views', false\n]\n)"
                    },
                    {
                        "id": "03ad1f6b-7d7c-4abc-8b8d-446621ad479e",
                        "version": "KqlParameterItem/1.0",
                        "name": "OtherFilters",
                        "type": 1,
                        "description": null,
                        "value": ""
                    },
                    {
                        "id": "815b8c50-0d4a-4374-a073-bc9394103aed",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 2,
                        "description": null,
                        "isRequired": true,
                        "query": "datatable(key:string, display:string) \n[ \n\"1h\", \"Last Hour\", \n\"1d\", \"Last 24 hours\", \n\"2d\", \"Last 48 hours\", \n\"3d\", \"Last 3 days\", \n\"7d\", \"Last 7 days\", \n\"14d\", \"Last 14 days\", \n\"30d\", \"Last 30 days\", \n\"60d\", \"Last 60 days\", \n\"90d\", \"Last 90 days\"\n] ",
                        "value": "30d"
                    },
                    {
                        "id": "4548f4fe-0130-42c9-b796-385cd12ccb24",
                        "version": "KqlParameterItem/1.0",
                        "name": "OptimizeCalculationsFor",
                        "type": 2,
                        "description": "Use este par√¢metro para, essencialmente, definir o n√∫mero de sess√µes de usu√°rio para usar em c√°lculos (amostragem). Isso permite que voc√™ encontre o equil√≠brio certo entre desempenho e precis√£o para sua an√°lise. Otimizar para: Desempenho = 10.000 sess√µes, Saldo = 100.000 amostras, Precis√£o = 1.000.000 de sess√µes",
                        "isRequired": true,
                        "query": "datatable(x:string, y:string)[\n'10000', 'Performance',\n'100000', 'Balance',\n'1000000', 'Accuracy'\n]",
                        "value": "100000"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "name": "Common parameter block"
        },
        {
            "type": 1,
            "content": {
                "json": "---\n## <a name=\"usage\"></a>Uso\nEsta se√ß√£o ajuda voc√™ a entender como as p√°ginas do aplicativo s√£o usadas ‚Äì em termos de n√∫mero de usu√°rios, sess√µes e exibi√ß√µes. "
            },
            "name": "Usage section text"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let timeRange = {TimeRange};\nlet allEvents = pageViews\n| where timestamp > ago(timeRange);\nlet interestingEvents = allEvents\n| where name in ({Pages}) or '*' in ({Pages}) \n{OtherFilters};\ninterestingEvents\n| summarize Users = dcount(user_Id), Sessions = dcount(session_Id), Instances = count() by name\n| extend rank = 2, name = strcat('üî∑ ', name)\n| union (interestingEvents\n        | summarize Users = dcount(user_Id), Sessions = dcount(session_Id), Instances = count()\n        | extend name = 'üî∂ Overall', rank = 1)\n| extend jkey = 1\n| join kind = inner (allEvents \n                    | summarize AllUsers = dcount(user_Id), AllSessions = dcount(session_Id), AllInstances = count()\n                    | extend jkey = 1) on jkey \n| project ['Page Name'] = name, ['Unique Users'] = Users, ['As % of app Users'] = round(100.0 * Users / AllUsers, 2),\n          ['Unique Sessions'] = Sessions, ['As % of app Sessions'] = round(100.0 * Sessions / AllSessions, 2),\n          ['Total Page Views'] = Instances , ['As % of app Page Views'] = round(100.0 * Instances / AllInstances, 2), rank\n| order by rank asc, ['Unique Users'] desc\n| project-away rank",
                "size": 1,
                "showAnalytics": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Unique Users",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "blue"
                            }
                        },
                        {
                            "columnMatch": "Unique Sessions",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "green"
                            }
                        },
                        {
                            "columnMatch": "Total Page Views",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "yellow"
                            }
                        }
                    ],
                    "filter": true
                }
            },
            "showPin": true,
            "name": "Usage grid"
        },
        {
            "type": 1,
            "content": {
                "json": "- As colunas `As % of App Users/Sessions/Views` comparam o uso da exibi√ß√£o de p√°gina selecionada com aquele do aplicativo inteiro.\n"
            },
            "name": "Usage footer text"
        },
        {
            "type": 1,
            "content": {
                "json": "---\n## <a name=\"time-spent-on-page\"></a>Tempo gasto na p√°gina\nEsse relat√≥rio ajuda voc√™ a entender o tempo gasto pelos clientes em suas p√°ginas. Tempo mais longo gasto em p√°ginas geralmente indica bom engajamento e geralmente √© o comportamento desejado."
            },
            "name": "Time spent on page text"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                    {
                        "id": "0411936a-4cb9-44dd-946d-b449ce3b284e",
                        "version": "KqlParameterItem/1.0",
                        "name": "IgnoreDurationsOver",
                        "type": 1,
                        "description": "Use esse par√¢metro para filtrar nossas exibi√ß√µes de p√°gina que levaram mais tempo do que √© poss√≠vel (por exemplo, deixadas abertas em uma guia n√£o ativa). O padr√£o √© 1 hora. ",
                        "isRequired": true,
                        "query": "datatable(x:string)[ '3600s' ]"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "name": "Time spent on page parameter block"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let timeRange = {TimeRange};\nlet samples = {OptimizeCalculationsFor};\nlet pageDurationThreshold = {IgnoreDurationsOver};\nlet allEvents = union pageViews\n| where timestamp > ago(timeRange);\nlet allInterestingEvents = allEvents\n| where name in ({Pages}) or '*' in ({Pages}) \n{OtherFilters};\nlet sampledSessions = materialize(allInterestingEvents\n| summarize by session_Id\n| sample samples\n| summarize makelist(session_Id, samples));\nlet data = allInterestingEvents\n| where session_Id in (sampledSessions)\n| project session_Id, timestamp, name\n| join kind= inner (allEvents\n        | where session_Id in (sampledSessions)\n        | project session_Id, timestamp\n        ) on session_Id \n| project session_Id, TimeDiff = timestamp  - timestamp1, name, timestamp\n| where TimeDiff > 0s and TimeDiff <= pageDurationThreshold\n| summarize SecondsSpentOnPage = min(TimeDiff) / 1s by session_Id, name, timestamp;\ndata\n| summarize Instances = count(), (Median, p75, p90) = percentiles(SecondsSpentOnPage, 50, 75, 90), Mean = avg(SecondsSpentOnPage) by name\n| extend rank = 2, name = strcat('üî∑ ', name)\n| union (data\n        | summarize Instances = count(), (Median, p75, p90) = percentiles(SecondsSpentOnPage, 50, 75, 90), Mean = avg(SecondsSpentOnPage)\n        | extend name = 'üî∂ Overall', rank = 1)\n| order by rank asc, Median desc\n| project-away rank\n| project ['Page Name'] = name, ['Sampled Page Views'] = Instances, ['Median (seconds)'] = round(Median, 1), ['75th Percentile (seconds)'] = round(p75, 1), ['90th Percentile (seconds)'] = round(p90, 1), ['Mean (seconds)'] = round(Mean, 1)",
                "size": 1,
                "showAnalytics": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "visualization": "table",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Sampled Page Views",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "blue"
                            }
                        },
                        {
                            "columnMatch": "Median (seconds)",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "yellow"
                            }
                        },
                        {
                            "columnMatch": "90th Percentile (seconds)",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "red"
                            }
                        }
                    ],
                    "filter": true
                }
            },
            "showPin": true,
            "name": "Time spent on page grid"
        },
        {
            "type": 1,
            "content": {
                "json": "- Os c√°lculos podem usar amostragem com base no par√¢metro `OptimizeCalculationsFor`. \n- O tempo gasto na p√°gina n√£o considera as p√°ginas de sa√≠da (a √∫ltima p√°gina da sess√£o) nesses c√°lculos. A coluna `Sampled Page Views` pode ser menor do que a contagem de amostragem de {OptimizeCalculationsFor} por causa disso.\n"
            },
            "name": "Time spent on page footer"
        },
        {
            "type": 1,
            "content": {
                "json": "---\n## <a name=\"time-to-first-interaction\"></a>Tempo para a primeira intera√ß√£o\nEsse relat√≥rio ajuda voc√™ a entender o tempo gasto pelos clientes para interagir pela primeira vez com recursos cr√≠ticos do seu aplicativo. Ele pode ajud√°-lo a descobrir problemas com a capacidade de descoberta dos seus recursos ou a intuitividade da interface do usu√°rio/fluxo do seu aplicativo."
            },
            "name": "Time to First Interaction text"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                    {
                        "id": "65e9a492-2e89-477a-a041-e99a61481c65",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeFrom",
                        "type": 2,
                        "description": "Para os usu√°rios, o primeiro uso √© calculado como o primeiro uso dentro do intervalo de tempo. √â poss√≠vel que o usu√°rio tenha come√ßado a usar seu aplicativo antes do intervalo de tempo.",
                        "isRequired": true,
                        "query": "datatable(x:string, y:string)[\n'session_Id', 'Start of the Session',\n'user_Id', 'First use by Anonymous User ‚ö†Ô∏è',\n'user_AuthenticatedId', 'First use by Authenticated User ‚ö†Ô∏è',\n];",
                        "value": "session_Id"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "name": "Time to First Interaction parameter block"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let samples = {OptimizeCalculationsFor};\nlet allEvents = union customEvents, pageViews\n| where timestamp > ago({TimeRange});\nlet allInterestingEvents = allEvents\n| where name in ({Pages}) or '*' in ({Pages})\n{OtherFilters};\nlet sampledSessions = materialize(allInterestingEvents\n| summarize by {TimeFrom}\n| sample samples\n| summarize makelist({TimeFrom}, samples));\nlet sessionStart = allEvents\n| where {TimeFrom} in (sampledSessions)\n| summarize Start = min(timestamp) by {TimeFrom};\nlet firstInterestingEvent = allInterestingEvents\n| where {TimeFrom} in (sampledSessions)\n| summarize Interaction = min(timestamp) by {TimeFrom}, name;\nlet segmentedFirstInteraction = firstInterestingEvent\n| join kind = inner (sessionStart) on {TimeFrom}\n| project FirstInteractionTime = Interaction - Start, name\n| summarize Sessions = count(), Mean = avg(FirstInteractionTime), (Median, p75, p90) = percentiles(FirstInteractionTime, 50, 75, 90) by name;\nsegmentedFirstInteraction\n| union (firstInterestingEvent\n| summarize Interaction = min(Interaction) by {TimeFrom}\n| join kind = inner (sessionStart) on {TimeFrom}\n| project FirstInteractionTime = Interaction - Start\n| summarize Sessions = count(), Mean = avg(FirstInteractionTime), (Median, p75, p90) = percentiles(FirstInteractionTime, 50, 75, 90)\n| extend name = 'üî∂ Overall', o = 0m)\n| extend Mean = round(Mean / 1m, 2), Median = round(Median / 1m, 2), p75 = round(p75 / 1m, 2), p90 = round(p90 / 1m, 2)\n| order by o asc, Median asc, Sessions desc\n| project [\"Page Name\"] = name, ['Sampled Views'] = Sessions, ['Median (in minutes)'] = Median, ['75th Percentile (in minutes)'] = p75, ['90th Percentile (in minutes)'] = p90, ['Mean (in minutes)'] = Mean\n",
                "size": 1,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Sampled Views",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "blue"
                            }
                        },
                        {
                            "columnMatch": "Median (in minutes)",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "yellow"
                            }
                        },
                        {
                            "columnMatch": "90th Percentile (in minutes)",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "red"
                            }
                        }
                    ]
                }
            },
            "name": "Time to First Interaction grid"
        },
        {
            "type": 1,
            "content": {
                "json": "- O c√°lculo pode usar amostragem com base no par√¢metro `OptimizeCalculationsFor`. "
            },
            "name": "Time to First Interaction footer"
        },
        {
            "type": 1,
            "content": {
                "json": "---\n## <a name=\"page-exit-rates\"></a>Taxas de sa√≠da de p√°gina\nDiz-se que uma exibi√ß√£o de p√°gina contribuiu para uma _sa√≠da_ quando ela √© a √∫ltima p√°gina exibida na sess√£o. √â prov√°vel que o usu√°rio tenha sa√≠do do aplicativo, navegando para outro aplicativo, seja navegando para outro aplicativo ou fechando o aplicativo/navegador. \n\nA _taxa de sa√≠da_ de uma p√°gina √© o percentual das exibi√ß√µes que foram a √∫ltima exibi√ß√£o na sess√£o. "
            },
            "name": "Page Exit Rates text"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let samples = {OptimizeCalculationsFor};\nlet allEvents = pageViews\n| where timestamp > ago({TimeRange});\nlet allInterestingEvents = allEvents\n| where name in ({Pages}) or '*' in ({Pages})\n{OtherFilters};\nlet sampledSessions = materialize(allInterestingEvents\n| summarize by session_Id\n| sample samples\n| summarize makelist(session_Id, samples));\nlet bounces = allEvents\n| where session_Id in (sampledSessions)\n| summarize (timestamp, name) = argmax(timestamp, name) by session_Id;\nlet sessionsWithInterestingEvents = allInterestingEvents\n| where session_Id in (sampledSessions);\nlet allSessionData = sessionsWithInterestingEvents\n| summarize Sessions = dcount(session_Id) by name\n| union (sessionsWithInterestingEvents\n        | summarize Sessions = dcount(session_Id) | extend name = 'Overall');\nlet bouncesWithInterestingEvents = bounces\n| where name in ({Pages}) or '*' in ({Pages});\nbouncesWithInterestingEvents\n| summarize BouncedSessions = dcount(session_Id) by name\n| extend rank = 2\n| union (bouncesWithInterestingEvents\n        | summarize BouncedSessions = dcount(session_Id) | extend name = 'Overall', rank = 1)\n| join kind=inner\n(\n    allSessionData\n)\non name\n| extend BounceRate = round(100.0 * BouncedSessions / Sessions, 2)\n| order by rank asc, BounceRate desc\n| project ['Page Name'] = iff(name == 'Overall', 'üî∂ Overall', strcat('üî∑ ', name)), ['Sampled Sessions with Page View'] = Sessions, ['Sampled Sessions Ended after Page View'] = BouncedSessions, ['Exit Rate (%)'] = BounceRate",
                "size": 1,
                "showAnalytics": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Sampled Sessions",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "blue"
                            }
                        },
                        {
                            "columnMatch": "Exit Rate (%)",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": 100,
                                "palette": "red"
                            }
                        }
                    ],
                    "filter": true
                }
            },
            "showPin": true,
            "name": "Page Exit Rates grid"
        },
        {
            "type": 1,
            "content": {
                "json": "- O c√°lculo pode usar amostragem com base no par√¢metro `OptimizeCalculationsFor`. "
            },
            "name": "Page Exit Rates footer"
        }
    ],
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}