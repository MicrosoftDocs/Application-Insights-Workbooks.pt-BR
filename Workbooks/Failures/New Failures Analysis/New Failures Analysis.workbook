{
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json",
    "version": "Notebook/1.0",
    "isLocked": true,
    "items": [
        {
            "type": 1,
            "content": {
                "json": "# <a name=\"new-failures-analysis\"></a>Novas análises de falha\nEsta pasta de trabalho ajudará você a identificar quaisquer novas falhas que possam ter começado em seu aplicativo. Ela analisa as falhas do seu aplicativo de três fontes de telemetria:\n* Solicitações atendidas pelo aplicativo\n* Exceções no aplicativo\n* Chamadas de dependência feitas pelo aplicativo\n\nO relatório fornece a você com um monte de informações para ajudá-lo a realizar triagem desses novos problemas e diagnosticá-los. Use-o em conjunto com o Relatório de falhas no Application Insights para entender as falhas em seu aplicativo."
            },
            "conditionalVisibility": null,
            "halfWidth": false
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "query": "",
                "crossComponentResources": [],
                "parameters": [
                    {
                        "id": "84caf619-7585-48e0-a9c3-85c364aaa13b",
                        "version": "KqlParameterItem/1.0",
                        "name": "Show",
                        "type": 2,
                        "description": null,
                        "isRequired": true,
                        "query": "datatable(x:string, y:string)[\r\n\"['New Failure Rate (%)'], ['Existing Failure Rate (%)']\", 'New and Existing Failures',\r\n\"['New Failure Rate (%)']\", 'Only New Failures',\r\n\"['Existing Failure Rate (%)']\", 'Only Existing Failures',\r\n]",
                        "value": "['New Failure Rate (%)'], ['Existing Failure Rate (%)']",
                        "resourceType": "microsoft.insights/components"
                    },
                    {
                        "id": "6ab5c1cb-bad0-4d96-8e63-d439d0681c6e",
                        "version": "KqlParameterItem/1.0",
                        "name": "In",
                        "type": 2,
                        "description": null,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "requests\n| where timestamp >= ago(1d)\n| summarize Count = count() by operation_Name\n| order by Count desc\n| project v = operation_Name, t = operation_Name, s = false\n| union (datatable(v:string, t:string, s:boolean)[\n'*', 'All Operations', true\n])",
                        "resourceType": "microsoft.insights/components"
                    },
                    {
                        "id": "eac9cbf1-6364-4f28-9c61-a9b038c035d7",
                        "version": "KqlParameterItem/1.0",
                        "name": "OverTimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                            "durationMs": 86400000
                        },
                        "typeSettings": {
                            "selectableValues": [
                                {
                                    "durationMs": 1800000
                                },
                                {
                                    "durationMs": 3600000
                                },
                                {
                                    "durationMs": 14400000
                                },
                                {
                                    "durationMs": 43200000
                                },
                                {
                                    "durationMs": 86400000
                                },
                                {
                                    "durationMs": 259200000
                                },
                                {
                                    "durationMs": 604800000
                                },
                                {
                                    "durationMs": 1209600000
                                },
                                {
                                    "durationMs": 2419200000
                                },
                                {
                                    "durationMs": 2592000000
                                }
                            ],
                            "allowCustom": true
                        }
                    },
                    {
                        "id": "6f0de137-0136-48f0-b463-640de7109c05",
                        "version": "KqlParameterItem/1.0",
                        "name": "UseComparisonTimeRangeOf",
                        "type": 1,
                        "isRequired": true,
                        "query": "let t = {OverTimeRange:seconds};\r\nlet w = case(t <= 86400, '7d', t <= 259200, '14d', t <= 120960, '28d', '60d');\r\nrange i from 1 to 1 step 1\r\n| project x = w",
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "name": "parameters - 1"
        },
        {
            "type": 1,
            "content": {
                "json": "---\n## <a name=\"request-failures-analysis\"></a>Análise de falhas de solicitação\n"
            },
            "name": "text - 2"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                    {
                        "id": "7a6716e6-3b5d-426b-a091-76e25325563a",
                        "version": "KqlParameterItem/1.0",
                        "name": "RequestFilters",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "requests\r\n| where timestamp {OverTimeRange}\r\n| where operation_Name in ({In}) or '*' in ({In})\r\n| summarize Count = count(), Users = dcount(user_Id) by name\r\n| project v = name, t = name, s=false\r\n| union (datatable(v:string, t:string, s:boolean)[\r\n'*', 'All Requests', true\r\n])",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                    },
                    {
                        "id": "fa3ae272-8e65-4b87-a5a6-ef256a8a1956",
                        "version": "KqlParameterItem/1.0",
                        "name": "IncludeResultCodes",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "datatable(x:string, y:string, z:boolean)[\r\n'*', 'All', true,\r\n'@', 'All 500s', false,\r\n'#', 'All 400s', false\r\n]\r\n| union (requests\r\n| where timestamp {OverTimeRange}\r\n| where success == false\r\n| summarize by resultCode\r\n| order by resultCode asc\r\n| project x = resultCode, y = resultCode, z = false)",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "name": "parameters - 3"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"failures-rates\"></a>Taxas de falhas\nEsta seção ajudará você a ver como suas taxas de falha de solicitação são alteradas ao longo do tempo – segmentadas por falhas novas versus existentes."
            },
            "name": "text - 4"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let startTime = {OverTimeRange:start};\nlet grain = {OverTimeRange:grain};\nlet bigWindowTimeRange = {UseComparisonTimeRangeOf};\nlet existingFailures = requests\n| where timestamp >= ago(bigWindowTimeRange) and timestamp < bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| where resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\n| extend Key = strcat(name, '-', resultCode)\n| summarize makeset(Key, 10000);\nrequests\n| where timestamp >= bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| extend IncludeInFailures = resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\n| extend Key = strcat(name, '-', resultCode)\n| summarize NewFailures = countif(success == false and Key !in (existingFailures) and IncludeInFailures), ExistingFailures = countif(success == false and Key in (existingFailures) and IncludeInFailures), All = count() by bin(timestamp, grain)\n| project timestamp, ['New Failure Rate (%)'] = 100.0 * NewFailures / All, ['Existing Failure Rate (%)'] = 100.0 * ExistingFailures / All\n| project timestamp, {Show}",
                "size": 0,
                "aggregation": 2,
                "showAnnotations": true,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "visualization": "barchart"
            },
            "name": "query - 5"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"requests-volume\"></a>Volume de solicitações\nEste gráfico mostra volumes de solicitação ou carga ao longo do tempo. Alterações no volume podem afetar o desempenho e as falhas. Esses dados definirão o contexto no qual as falhas ocorreram."
            },
            "name": "text - 6"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let startTime = {OverTimeRange:start};\nlet grain = {OverTimeRange:grain};\nlet bigWindowTimeRange = {UseComparisonTimeRangeOf};\nlet existingFailures = requests\n| where timestamp >= ago(bigWindowTimeRange) and timestamp < bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| extend Key = strcat(name, '-', resultCode)\n| summarize makeset(Key, 10000);\nrequests\n| where timestamp >= bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| extend IncludeAsFailure = resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\n| extend Key = strcat(name, '-', resultCode)\n| summarize NewFailures = countif(success == false and Key !in (existingFailures) and IncludeAsFailure == true), ExistingFailures = countif(success == false and Key in (existingFailures) and IncludeAsFailure), All = count() by bin(timestamp, grain)\n| project timestamp, ['Passing'] = All - NewFailures - ExistingFailures, ['Existing Failures'] = ExistingFailures, ['New Failures'] = NewFailures",
                "size": 1,
                "aggregation": 2,
                "showAnnotations": true,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "visualization": "barchart"
            },
            "name": "query - 7"
        },
        {
            "type": 1,
            "content": {
                "json": "## <a name=\"request-details\"></a>Detalhes da solicitação\nEsta tabela mostra todas as solicitações com falha em seu aplicativo, bem como os respectivos códigos de resultado classificados por usuários afetados. Essas informações o ajudarão a conhecer as diversas falhas em seu aplicativo e a gravidade delas. O relatório também indica se uma falha é nova ou existente, de modo que você vê falhas que começaram a ocorrer muito recentemente (e que normalmente são as mais interessantes)."
            },
            "name": "text - 8"
        },
        {
            "type": 1,
            "content": {
                "json": "\n🔸 falha nova 🔹 falha existente"
            },
            "name": "text - 9"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let startTime = {OverTimeRange:start};\nlet grain = {OverTimeRange:grain};\nlet bigWindowTimeRange = {UseComparisonTimeRangeOf};\nlet bigWindow = requests\n| where timestamp >= ago(bigWindowTimeRange) and timestamp < bin(startTime, grain)\n| where success == false\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| where resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\n| summarize by name, resultCode\n| summarize makelist(strcat(name, '-', resultCode), 10000);\nrequests\n| where timestamp {OverTimeRange}\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| where resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\n| where success == false\n| summarize Count = count(), Users = dcount(user_Id) by name, resultCode\n| extend IsNew = strcat(name, '-', resultCode) !in (bigWindow)\n| where \"{Show}\" == \"['New Failure Rate (%)'], ['Existing Failure Rate (%)']\" or IsNew == true\n| order by Users desc, Count desc, name asc\n| project ['Request Name'] = iff(IsNew, strcat('🔸 ', name), strcat('🔹 ', name)), ['Failed with Result Code'] = resultCode, ['Request Failures'] = Count, ['Users Affected'] = Users",
                "size": 0,
                "aggregation": 2,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "visualization": "table",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Request Failures",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "yellow"
                            }
                        },
                        {
                            "columnMatch": "Users Affected",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "green"
                            }
                        }
                    ]
                }
            },
            "name": "query - 10"
        },
        {
            "type": 1,
            "content": {
                "json": "---\n## <a name=\"exceptions-analysis\"></a>Análise de exceções\n"
            },
            "name": "text - 11"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                    {
                        "id": "481f99f9-eec9-453b-a342-064a91cc4ed6",
                        "version": "KqlParameterItem/1.0",
                        "name": "ProblemFilter",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "exceptions\r\n| where timestamp {OverTimeRange}\r\n| where operation_Name in ({In}) or '*' in ({In})\r\n| summarize Count = count() by problemId\r\n| order by Count desc\r\n| project v = problemId, t = problemId, s=false\r\n| union (datatable(v:string, t:string, s:boolean)[\r\n'*', 'All Exceptions', true\r\n])",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                    },
                    {
                        "id": "8b14a6a5-f37a-46f9-8438-cef1349478b2",
                        "version": "KqlParameterItem/1.0",
                        "name": "Source",
                        "type": 2,
                        "isRequired": true,
                        "query": "datatable(x:string, y:string)[\r\n'1 == 1', 'Server and Client Exceptions',\r\n'client_Type <> \"Browser\"', 'Only Server Exceptions',\r\n'client_Type == \"Browser\"', 'Only Client Exceptions',\r\n]",
                        "value": "1 == 1",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "name": "parameters - 12"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"exception-trends\"></a>Tendências de exceção"
            },
            "name": "text - 13"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let startTime = {OverTimeRange:start};\nlet grain = {OverTimeRange:grain};\nlet bigWindowTimeRange = {UseComparisonTimeRangeOf};\nlet bigWindow = exceptions\n| where timestamp >= ago(bigWindowTimeRange) and timestamp < bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where {Source}\n| where problemId in ({ProblemFilter}) or '*' in ({ProblemFilter})\n| summarize makeset(problemId, 10000);\nexceptions\n| where timestamp {OverTimeRange}\n| where operation_Name in ({In}) or '*' in ({In})\n| where {Source}\n| summarize Count = count() by bin(timestamp, grain), problemId\n| where problemId in ({ProblemFilter}) or '*' in ({ProblemFilter})\n| extend IsNew = problemId !in (bigWindow)\n| where \"{Show}\" == \"['New Failure Rate (%)'], ['Existing Failure Rate (%)']\" or IsNew\n| project timestamp, problemId, Count\n",
                "size": 0,
                "aggregation": 2,
                "showAnnotations": true,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "visualization": "barchart"
            },
            "name": "query - 14"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"exception-details\"></a>Detalhes da exceção\nEsta tabela mostra todas as exceções em seu aplicativo e a operação relacionada, classificadas por usuários afetados. Essas informações o ajudarão a conhecer os diversos erros em seu aplicativo e a gravidade deles. O relatório também indica se uma exceção é nova ou existente, de modo que você vê exceções que começaram a ocorrer muito recentemente (e que normalmente são as mais interessantes)."
            },
            "name": "text - 15"
        },
        {
            "type": 1,
            "content": {
                "json": "\n🔸 Nova exceção 🔹 Exceção existente"
            },
            "name": "text - 16"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let startTime = {OverTimeRange:start};\nlet grain = {OverTimeRange:grain};\nlet bigWindowTimeRange = {UseComparisonTimeRangeOf};\nlet bigWindow = exceptions\n| where timestamp >= ago(bigWindowTimeRange) and timestamp < bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where {Source}\n| where problemId in ({ProblemFilter}) or '*' in ({ProblemFilter})\n| summarize makeset(problemId, 10000);\nexceptions\n| where timestamp {OverTimeRange}\n| where operation_Name in ({In}) or '*' in ({In})\n| where {Source}\n| summarize Count = count(), Users = dcount(user_Id) by problemId\n| where problemId in ({ProblemFilter}) or '*' in ({ProblemFilter})\n| extend IsNew = iff(problemId !in (bigWindow), true, false)\n| where \"{Show}\" == \"['New Failure Rate (%)'], ['Existing Failure Rate (%)']\" or IsNew\n| order by Users desc, Count desc, problemId asc\n| project Problem = iff(IsNew, strcat('🔸 ', problemId), strcat('🔹 ', problemId)), ['Exception Count'] = Count, ['Users Affected'] = Users",
                "size": 0,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Exception Count",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "yellow"
                            }
                        },
                        {
                            "columnMatch": "Users Affected",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "green"
                            }
                        }
                    ]
                }
            },
            "name": "query - 17"
        },
        {
            "type": 1,
            "content": {
                "json": "---\n## <a name=\"dependency-failure-analysis\"></a>Análise de falha de dependência\n"
            },
            "name": "text - 18"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                    {
                        "id": "42490f33-2004-4535-8e9f-69ede57f2542",
                        "version": "KqlParameterItem/1.0",
                        "name": "DependencyFilters",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "dependencies\r\n| where timestamp {OverTimeRange}\r\n| where operation_Name in ({In}) or '*' in ({In})\r\n| summarize Count = count() by name\r\n| order by Count desc\r\n| project v = name, t = name, s=false\r\n| union (datatable(v:string, t:string, s:boolean)[\r\n'*', 'All Dependencies', true\r\n])",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                    },
                    {
                        "id": "ac2d6138-9403-41fc-a29c-99857071abc9",
                        "version": "KqlParameterItem/1.0",
                        "name": "IncludeResultCodes",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "datatable(x:string, y:string, z:boolean)[\r\n'*', 'All', true,\r\n'@', 'All 500s', false,\r\n'#', 'All 400s', false\r\n]\r\n| union (dependencies\r\n| where timestamp {OverTimeRange}\r\n| where success == false\r\n| summarize by resultCode\r\n| order by resultCode asc\r\n| project x = resultCode, y = resultCode, z = false)",
                        "typeSettings": {
                            "additionalResourceOptions": []
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                    }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.insights/components"
            },
            "name": "parameters - 19"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"failure-rates\"></a>Taxas de falha\nEsta seção ajudará você a ver como suas taxas de falha de dependência são alteradas ao longo do tempo – segmentadas por falhas novas versus existentes."
            },
            "name": "text - 20"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let startTime = {OverTimeRange:start};\nlet grain = {OverTimeRange:grain};\nlet bigWindowTimeRange = {UseComparisonTimeRangeOf};\nlet existingFailures = dependencies\n| where timestamp >= ago(bigWindowTimeRange) and timestamp < bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| extend Key = strcat(name, '-', resultCode)\n| summarize makeset(Key, 10000);\ndependencies\n| where timestamp >= bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| extend IncludeAsFailure = resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\n| extend Key = strcat(name, '-', resultCode)\n| summarize NewFailures = countif(success == false and Key !in (existingFailures) and IncludeAsFailure), ExistingFailures = countif(success == false and Key in (existingFailures) and IncludeAsFailure), All = count() by bin(timestamp, grain)\n| project timestamp, ['New Failure Rate (%)'] = 100.0 * NewFailures / All, ['Existing Failure Rate (%)'] = 100.0 * ExistingFailures / All\n| project timestamp, {Show}",
                "size": 0,
                "aggregation": 2,
                "showAnnotations": true,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "visualization": "barchart"
            },
            "name": "query - 21"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"dependency-volume\"></a>Volume de dependência\nEste gráfico mostra volumes de solicitação ou carga ao longo do tempo. Alterações no volume podem afetar o desempenho e as falhas. Esses dados definirão o contexto no qual as falhas ocorreram."
            },
            "name": "text - 22"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let startTime = {OverTimeRange:start};\nlet grain = {OverTimeRange:grain};\nlet bigWindowTimeRange = {UseComparisonTimeRangeOf};\nlet existingFailures = dependencies\n| where timestamp >= ago(bigWindowTimeRange) and timestamp < bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| extend Key = strcat(name, '-', resultCode)\n| summarize makeset(Key, 10000);\ndependencies\n| where timestamp >= bin(startTime, grain)\n| where operation_Name in ({In}) or '*' in ({In})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| extend IncludeAsFailure = resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\n| summarize NewFailures = countif(success == false and strcat(name, '-', resultCode) !in (existingFailures) and IncludeAsFailure == true), ExistingFailures = countif(success == false and strcat(name, '-', resultCode) in (existingFailures) and IncludeAsFailure == true), All = count() by bin(timestamp, grain)\n| project timestamp, ['Passing'] = All - NewFailures - ExistingFailures, ['Existing Failures'] = ExistingFailures, ['New Failures'] = NewFailures",
                "size": 1,
                "aggregation": 2,
                "showAnnotations": true,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "visualization": "barchart"
            },
            "name": "query - 23"
        },
        {
            "type": 1,
            "content": {
                "json": "### <a name=\"dependency-details\"></a>Detalhes da dependência\nEsta tabela mostra todas as dependências com falha em seu aplicativo, bem como os respectivos códigos de resultado classificados por usuários afetados. Essas informações o ajudarão a conhecer as diversas falhas em seu aplicativo e a gravidade delas. O relatório também indica se uma falha é nova ou existente, de modo que você vê falhas que começaram a ocorrer muito recentemente (e que normalmente são as mais interessantes)."
            },
            "name": "text - 24"
        },
        {
            "type": 3,
            "content": {
                "version": "KqlItem/1.0",
                "query": "let startTime = {OverTimeRange:start};\r\nlet grain = {OverTimeRange:grain};\r\nlet bigWindowTimeRange = {UseComparisonTimeRangeOf};\r\nlet bigWindow = dependencies\r\n| where timestamp >= ago(bigWindowTimeRange) and timestamp < bin(startTime, grain)\r\n| where operation_Name in ({In}) or '*' in ({In})\r\n| where name in ({DependencyFilters}) or '*' in ({DependencyFilters})\r\n| where resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\r\n| where success == false\r\n| summarize by name, resultCode\r\n| summarize makelist(strcat(name, '-', resultCode));\r\ndependencies\r\n| where timestamp {OverTimeRange}\r\n| where operation_Name in ({In}) or '*' in ({In})\r\n| where name in ({DependencyFilters}) or '*' in ({DependencyFilters})\r\n| where resultCode in ({IncludeResultCodes}) or '*' in ({IncludeResultCodes}) or iff('@' in ({IncludeResultCodes}), resultCode startswith '5', false) or iff('#' in ({IncludeResultCodes}), resultCode startswith '4', false)\r\n| where success == false\r\n| summarize Count = count(), Users = dcount(user_Id) by name, resultCode, operation_Name\r\n| extend IsNew = iff(strcat(name, '-', resultCode) !in (bigWindow), true, false)\r\n| where \"{Show}\" == \"['New Failure Rate (%)'], ['Existing Failure Rate (%)']\" or IsNew == true\r\n| order by Users desc, Count desc, name asc\r\n| project ['Dependency Name'] = iff(IsNew == true, strcat('🔸 ', name), strcat('🔹 ', name)), ['Failed with Result Code'] = resultCode, Operation = operation_Name, ['Dependency Failures'] = Count, ['Users Affected'] = Users",
                "size": 0,
                "queryType": 0,
                "resourceType": "microsoft.insights/components",
                "gridSettings": {
                    "formatters": [
                        {
                            "columnMatch": "Dependency Failures",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "yellow"
                            }
                        },
                        {
                            "columnMatch": "Users Affected",
                            "formatter": 4,
                            "formatOptions": {
                                "min": 0,
                                "max": null,
                                "palette": "green"
                            }
                        }
                    ]
                }
            },
            "name": "query - 25"
        }
    ]
}